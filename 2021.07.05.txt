2021/07/05

담임: 김형민 교수, 교수연구실 제일 아쪽 자리

1교시 데이터베이스	하재관	오라클


<수업>
객체지향 개발방법론 -> 컴포넌트기반 개발방법론=cbd(component basd develope)
하드디스크 분할상태 등과 관계없이 돌아가는 프로그램

실행파일만 사용하게 되는 경우가 많은데 오류가 있을 때가 문제
어떻게 해결할 것인가

메타데이터
메타데이터는 레지스트리에 저장됨, 소프트웨어 검사할 때 사용
저장 삭제 수정을 올바르게 하기 위해서 또다른 데이터가 만들어지는데 이것이 메타데이터임
구조(예를 들어 index)나 제약사항(primary key 등, Not null, unique)에 해당하는 속성을 보관하기 위한 테이블에 저장되는 데이터

키의 접근이 복잡한 암호화 복호화를 거친다면 기본키로 식별하기 어려움. 예) 주민등록번호
데이터의 속성에서 기본키에 해당하는 식별자로 사용가능 한 것이 안보이면 기본키를 인공적으로 만듦, 식별자, 기본키

Q)기본키와 인덱스의 차이?
Q)PK가 기본킨건 알겠어. FK는 뭐임?

oracle은 데이터타입이 매우 간단하다, 그리고 그 데이터타입이 처리할 수 있는 데이터의 범위도 매우 넓다.

데이터베이스의 특성
하나의 데이터를 여러 프로그램에서 공유(sharing)하기 때문에 이를 고려해야 함

관계형데이터베이스를 사용하는 기본이유 : "중복제거" otherwise -> 삽입 / 수정 / 삭제이상, 즉 데이터 일관성 확보
이를 위한 처리가 정규화(5차까지 있음)

연결지향적 방법의 문제 : 한 사용자 / 프로그램이 사용 중인 데이터는 다른 사용자 / 프로그램이 사용 불가
-> 한 사용자가 데이터를 사용하면 그 데이터를 주고 연결을 끊고 다른 사용자에게 데이터 제공
그래서 나와야 하는 제어명령 : commit & roll back / 그래서 데이터베이스 저장이 필요함
dcl data control language = commit한다, database update

데이터베이스 특성
	실시간 접근
	계속적인 변화 (특히 주문에 대한 데이터)
	동시 공유(tmi: 완전히 동시에 공유하는 것은 불가, time sharing으로 처리)
	내용에 의한 참조(검색기능에 0x0000사용하쉴? 내용으로 검색 가능해야 할거아냐)

파일관리시스템이 PC에서 돌아가기 시작함
예전엔 데이터베이스가 프로그램에 종속되었음
이제는 프로그램과 데이터베이스가 독립적임
그래서 데이터의 중복이 발생 <- update abnormal에서 주로 발생

데이터베이스 관리 시스템
오라클은 시스템에 많은 부담을 줌 / 그러나 이를 감수할 만큼 안정성이 높음
시스템에 덜 부담주는 것 : sql server, my sql, 작은규모 개발에 사용, 보안 및 안정성과 시스템 부담과의 exchange

dbms: 데이터베이스를 관리하기 위한(최신으로 유지하기 위한/삽입/삭제/유지보수) 소프트웨어 시스템

단점 : 	비용과 느린 속도
장점 : 	프로그램과 데이터의 독립성
	보안 및 무결성 유지 (사원-부서, 매출-거래처에서 부서를 제거 및 거래처 제거 불가)
	데이터 불일치 피함

트랜젝션 : 하나의 결과를 얻기 위해 필요한 명령들의 집합<-이거면 프로그램하고 다른게 뭐지? 함수 및 실행파일
-> 실무적으로 커밋되어지는 단위라고 생각할 수 있음
기능단위 예) 잔액조회, 출금, 입금기능 등

트랜젝션의 특징:	원자성(처리가 되거나 아예 수행이 안 되어야 함 / 수행되는 도중에는 아예 수행되지 않는 상태여야 함)
		일관성(입금과 출금이 동시에 진행되면 안된다)
		고립성(트랜젝션의 부분적인 상태를 다른 트랜젝션에 제공되면 안된다)

자 시작
관계형 데이터베이스와 SQL
SQL(structure quary language) 구조적 질의어
어떤 데이터를 가져올 것인지에 대해 집중

테이블 이름은 고유해야함(테이블 이름을 저장하는 메타데이터가 있는 테이블에서 기본키여야 한다고 이해해도 ㄱㅊ?)
한 테이블 안에서 컬럼의 이름은 유일해야 함
SELECT ename, tel		(표시)
FROM employer		(테이블)
WHERE dept= '영업'	(조건)

테이블은 열과 행으로 구성
행은 데이터가 없을 때 없을 수 있으나
열은 테이블이 되려면 반드시 필요하다 (제목행은 행으로 취급하지 않음)

행은 튜플, 열은 어트리뷰트라고도 함(필드는 잘 안씀), 열에 의해 제한되는 범위가 도메인
컬럼의 제목의 모임이 스키마

키의 필요성
하나의 행을 다른 행과 확실히 구분지어줄 수 있는 컬럼
기본키 / 식별자
기본키가 될 수 있는 키의 모임: 후보키(1. Not null 2. 중복없음)
primary key
후보키 중에 기본키가 되지 않은 것을 대체키라고 함.
후보키 = {컬럼|중복없고 널이 아님}
대체키 = 후보키 - 기본키
기본키 U 대체키 = 후보키

외래키는 뭐냐(FK:foreign key)
자식테이블에서 사용하는 부모 테이블의 기본키 왜? 항목을 참조하려고
다른 테이블에 있는 기본키를 가져다 쓸 때 그 컬럼을 외래키라고 함
한번 외래키 관계가 형성되면 제거불가 메세지가 뜸
이것을 관계라고 부름
join을 발생시키기 위해서 관계가 맺어져야 함

쇼핑몰을 생각해보자
회원	상품	구매
회원번호	상품번호	회원번호/상품번호 
오리발이 붙은 쪽이 자식에 해당, 부모 테이블의 각 튜플을 중복허락하여서 자식테이블에서 사용하겠다

==================================================================

자바 프로그래밍 기초 / 김승섭
public class Hello{
	public static void main(String[] args){
		System.out.println("Hello, world!");
	}
}

자바디벨로퍼킷(JDK) 1.7, 1.8설치, 설치시 jre는 설치하지 않음 / 파일위치 지정
메모장 작성후 .java로 저장
cmd에서 java -version	javac -version
에서 버전 확인
바탕화면에서 shift + 우클릭으로 powershell 실행
javac(컴파일하겠다) Hello.java실행
->class파일 생성
java(실행파일 사용하겠다) Hello.class실행
System.out.println은 대문자 i가 아니라 l이다
이클립스 설치(압축풀기)
workspace 설정
preference설정(인코딩enc검색후 모두 UTF-8로 변경)
후에 제네럴, 어페어런스, 폰트설정
인코딩이란 컴퓨터가 문자를 해석하는 방법 지정하는 것
자바프로젝트 만들고 src에서 클래스 만들때 public static void main(String[] args) 체크
이클립스에는 저장시 컴파일해줌
콘솔창 까지 확인후 닫기
오라클 설치(오라클 서버 설치 / 오라클 클라이언트 설치<-JDK1.8로 연결)
자기컴퓨터를 가리키는 ip주소: 127.0.0.1 = localhost


<TMI>
6~7년 쿼리 작성핟가 데이터베이스 설계하게 됨
실무 테이블 5000~10000개, 논리적 설계 중요

자바 rdbms 프로젝트
자바 웹 프로젝트
실무 프로젝트

데이터베이스 설계는 프로젝트 초반에 진행하나 종반에 그 영향을 발휘한다
그래서 프로젝트 초입에 개발하고 빠지고 잘 못 설계되었으면 종반에 웹 개발자가 죽어난다

전자정부프로젝트의 사례 - 실패로 끝남, 총괄담당자는 감옥 감
프로젝트 참여했던 프리랜서가 나오면서 임금이 내려감

동시 공유(tmi: 완전히 동시에 공유하는 것은 불가, time sharing으로 처리, 현재 폰노이만 컴퓨팅방식을 사용하고 있어서)

IMF 이후 cobol 개발자들이 실직하면서 미국으로 많이 진출함

압축적 수업의 한계 : 이론적 배경 설명 부족 -> 사상누각 / 다른 상황에 적용할 수 있어야 함

용어 어려운건 이해해라
commit: 수행된 트랜젝션은 주기억장치(ram)에 저장되어 있음. 이를 하드디스크에 저장하라는 명령
ANSI(american national standard institution ~= KS한국표준): 미국표준 이를 ISO(국제표준)이 승인함
스키마 : 한 테이블의 열 구성에 해당하는 정보를 말함

UML(unified model language) : 시간차트

SQL(structure quary language) 구조적 질의어	C언어는 절차적 언어
분기branch명령어 / 반복문이 없다/ 변수도 없다 (ㄷㄷ)
이걸 구현할 수 있는 언어가 PL/SQL(procedual sql)

데이터베이스 설계
개념적설계->논리적설계->물리적설계
개념적설계
	1. 요구사항 추출
	엔터티(테이블), 어트리뷰트(속성, 스키마), 튜플, 인스턴스
논리적설계
	이 테이블에서 이 컬럼이 있어야하나 없어야하나
	사용하는 데이터베이스에 따라서 수직적분할 수평적통합하는 과정(수지수평이 바뀌었을 수 있음)
	정규화작업
물리적설계
	릴레이션(테이블), 어트리뷰트, 튜플, 도메인 

기업체에서 가장 요구하는 것
인성과 기초

어떤 프로젝트를 했냐면 예산시 병충해 사진 모두 받아서 유사한 사진을 검색해서 약 사는 곳, 처치방법 연동 앱 개발해서 단체채용

공공데이터 받을 수 있음. 

=============================================================================